input AddPlayerInput {
  name: String!
  lastname: String!
  position: String
  document: String!
  clientMutationId: String
}

type AddPlayerPayload {
  status: Int
  name: String
  lastname: String
  position: String
  document: String
  error: String
  clientMutationId: String
}

input ChangePasswordInput {
  oldPassword: String!

  """user new password"""
  password: String!
  clientMutationId: String
}

type ChangePasswordPayload {
  error: String
  clientMutationId: String
}

input LoginEmailInput {
  email: String!
  password: String!
  clientMutationId: String
}

type LoginEmailPayload {
  token: String
  error: String
  clientMutationId: String
}

"""Root of ... mutations"""
type Mutation {
  """Login Mutation"""
  LoginEmail(input: LoginEmailInput!): LoginEmailPayload
  RegisterEmail(input: RegisterEmailInput!): RegisterEmailPayload
  ChangePassword(input: ChangePasswordInput!): ChangePasswordPayload
  AddPlayer(input: AddPlayerInput!): AddPlayerPayload
  UpdatePlayer(input: UpdatePlayerInput!): UpdatePlayerPayload
  RemovePlayer(input: RemovePlayerInput!): RemovePlayerPayload
}

"""player data"""
type player {
  _id: ID
  status: Int
  name: String
  lastname: String
  position: String
  document: String
}

"""The root of all queries"""
type Query {
  me: User
  users: [User]
  players: [player]
  playerById(_id: String): player
}

input RegisterEmailInput {
  name: String!
  username: String!
  email: String!
  password: String!
  clientMutationId: String
}

type RegisterEmailPayload {
  token: String
  error: String
  clientMutationId: String
}

input RemovePlayerInput {
  _id: String!
  clientMutationId: String
}

type RemovePlayerPayload {
  name: String
  lastname: String
  error: String
  clientMutationId: String
}

input UpdatePlayerInput {
  _id: String!
  status: Int
  name: String
  lastname: String
  position: String
  document: String
  clientMutationId: String
}

type UpdatePlayerPayload {
  status: Int
  name: String
  lastname: String
  position: String
  document: String
  error: String
  clientMutationId: String
}

"""User data"""
type User {
  _id: ID
  name: String
  username: String
  email: String
  password: String
}